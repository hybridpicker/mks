#!/bin/bash
# Claude Cleanup System Documentation
# This file documents the automatic cleanup system for Claude-generated documentation

cat << 'EOF'
# ðŸ¤– Claude Documentation Cleanup System

## Overview
Automatic system to detect and remove unwanted .md files typically generated by Claude during development sessions.

## Components

### 1. Main Cleanup Script (`scripts/claude_cleanup.sh`)
- Scans project for .md files
- Uses pattern matching to identify Claude-generated content
- Protects important files (README.md, LICENSE files, vendor docs)
- Provides detailed cleanup report

### 2. Git Hook Integration
- **Pre-Commit**: Runs cleanup before each commit
- **Pre-Push**: Final cleanup before push to remote
- Non-blocking (warnings only if cleanup fails)

### 3. Manual Cleanup (`scripts/manual_claude_cleanup.sh`)
- Can be run anytime: `./scripts/manual_claude_cleanup.sh`
- Same cleanup logic as automated hooks

## Protected Files (Never Deleted)
- Main README.md
- LICENSE*.md files
- CHANGELOG*.md files
- Vendor/library documentation (animate.css, tinymce, select2)
- Any files in vendor/ or node_modules/

## Claude-Generated Patterns Detected
- Files starting with "# MKS Project", "# Test Structure"
- Migration instructions and app documentation
- Placeholder instructions ("Bitte lege hier...ab")
- Git hooks integration docs
- Problem resolution documents

## Usage

### Automatic (Recommended)
- Runs during every `git commit` and `git push`
- No action required

### Manual
```bash
# Run cleanup anytime
./scripts/manual_claude_cleanup.sh

# Or directly
./scripts/claude_cleanup.sh
```

## Customization
Edit `scripts/claude_cleanup.sh` to modify:
- `CLAUDE_PATTERNS`: Add new patterns to detect
- `PROTECTED_PATTERNS`: Add files to protect

## Status
âœ… Integrated into Git hooks
âœ… Protects important documentation  
âœ… Automatic and manual modes available
ðŸŽ¯ Keeps project clean from temporary Claude documentation
EOF